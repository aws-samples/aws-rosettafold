AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Creates a stack for running RoseTTAFold on AWS Batch.

Parameters:
  StackAvailabilityZone:
    Description: Availability zone to deploy stack resources
    Type: "AWS::EC2::AvailabilityZone::Name"

Resources:
  ##################################################
  # Network Configuration
  ##################################################
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      CidrBlock: "10.0.0.0/16"
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Network
          Value: Public
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "VPC",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  PublicSubnet0:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref StackAvailabilityZone
      CidrBlock:
        Fn::Select:
          - 0
          - Fn::Cidr: [!GetAtt VPC.CidrBlock, 6, 8]
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Network
          Value: Public
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "public-subnet",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  PrivateSubnet0:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Ref StackAvailabilityZone
      CidrBlock:
        Fn::Select:
          - 3
          - Fn::Cidr: [!GetAtt VPC.CidrBlock, 6, 8]
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Network
          Value: Private
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "private-subnet",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Network
          Value: Public
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "igw",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  GatewayToInternet:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Network
          Value: Public
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "public-route-table",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  PublicSubnetRouteTableAssociation0:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: PublicSubnet0
      RouteTableId:
        Ref: PublicRouteTable

  ElasticIP0:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "eip",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  NATGateway0:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId:
        "Fn::GetAtt":
          - ElasticIP0
          - AllocationId
      SubnetId:
        Ref: PublicSubnet0
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "nat-gateway",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  PrivateRouteTable0:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "private-route-table",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  PrivateRouteToInternet0:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable0
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATGateway0

  PrivateSubnetRouteTableAssociation0:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: PrivateSubnet0
      RouteTableId:
        Ref: PrivateRouteTable0

  ##################################################
  # S3
  ##################################################

  ResultsS3:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "s3",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]
    DeletionPolicy: Retain

  S3Endpoint:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      RouteTableIds:
        - !Ref PublicRouteTable
        - !Ref PrivateRouteTable0
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      VpcId: !Ref VPC

  ##################################################
  # FSx File System
  ##################################################
  FSX:
    Type: AWS::FSx::FileSystem
    Properties:
      FileSystemType: "LUSTRE"
      FileSystemTypeVersion: "2.12"
      LustreConfiguration:
        DataCompressionType: "LZ4"
        DeploymentType: "PERSISTENT_2"
        PerUnitStorageThroughput: 1000
      SecurityGroupIds:
        - !GetAtt VPC.DefaultSecurityGroup
      StorageCapacity: 1200
      StorageType: "SSD"
      SubnetIds:
        - !Ref PrivateSubnet0      
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "fsx-lustre",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  ##################################################
  # EC2 Launch Template
  ##################################################

  RFInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "instance-role",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      Description: "Required service policies to support running RoseTTAFold on AWS Batch"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Path: /
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "instance-role",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "instance-profile",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      Path: /
      Roles:
        - !Ref RFInstanceRole

  InstanceLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "launch-template",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: "/dev/xvda"
            Ebs:
              DeleteOnTermination: true
              Encrypted: true
              VolumeSize: 50
              VolumeType: "gp2"
        IamInstanceProfile:
          Name: !Ref InstanceProfile
        TagSpecifications:
          - ResourceType: "instance"
            Tags:
              - Key: Application
                Value: AWS-RoseTTAFold
              - Key: Name
                Value:
                  !Join [
                    "-",
                    [
                      "aws-rosettafold",
                      "launch-template",
                      !Select [
                        4,
                        !Split [
                          "-",
                          !Select [2, !Split ["/", !Ref AWS::StackId]],
                        ],
                      ],
                    ],
                  ]
        UserData:
          Fn::Base64:
            Fn::Join:
              [
                "",
                [
                  "MIME-Version: 1.0\n",
                  "Content-Type: multipart/mixed; boundary=\"==MYBOUNDARY==\"\n",
                  "\n",
                  "--==MYBOUNDARY==\n",
                  "Content-Type: text/cloud-config; charset=\"us-ascii\"\n",
                  "\n",
                  "runcmd:\n",
                  "- file_system_id_01=",
                  !Ref FSX,
                  "\n",
                  "- region=",
                  !Ref AWS::Region,
                  "\n",
                  "- fsx_directory=/fsx\n",
                  "- fsx_mount_name=",
                  !GetAtt FSX.LustreMountName,
                  "\n",
                  "- amazon-linux-extras install -y lustre2.10\n",
                  "- mkdir -p ${fsx_directory}\n",
                  "- mount -t lustre ${file_system_id_01}.fsx.${region}.amazonaws.com@tcp:/${fsx_mount_name} ${fsx_directory}\n",
                  "\n",
                  "--==MYBOUNDARY==--",
                ],
              ]

  ##################################################
  # Container Services
  ##################################################
  RFCodeRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      Code:
        BranchName: "main"
        S3:
          Bucket: "aws-hcls-ml"
          Key: "blog_post_support_materials/aws-RoseTTAFold/aws-rosettafold.zip"
      RepositoryDescription: Code for running RoseTTAFold on AWS
      RepositoryName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "code-repo",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "code-repo",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  RFContainerRegistry:
    Type: AWS::ECR::Repository
    Properties:
      EncryptionConfiguration:
        EncryptionType: AES256
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "container-repo",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "container-repo",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]
    DeletionPolicy: Retain

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "codebuild-role",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      Description: "Required service policies to support building AWS-RoseTTAFold container"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
      Path: /
      Policies:
        - PolicyName: RFCodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - Fn::Join:
                      [
                        ":",
                        [
                          "arn:aws:logs",
                          !Ref AWS::Region,
                          !Ref AWS::AccountId,
                          "log-group:/aws/codebuild/aws-rosettafold*",
                        ],
                      ]
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource:
                  - !Join [
                      "-",
                      ["arn:aws:s3:::codepipeline", !Ref AWS::Region, "*"],
                    ]
                  - !Join ["", [!GetAtt ResultsS3.Arn, "*"]]
              - Effect: Allow
                Action:
                  - codecommit:GitPull
                Resource:
                  - Fn::Join:
                      [
                        ":",
                        [
                          "arn:aws:codecommit",
                          !Ref AWS::Region,
                          !Ref AWS::AccountId,
                          !GetAtt RFCodeRepository.Name,
                        ],
                      ]
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource:
                  - Fn::Join:
                      [
                        ":",
                        [
                          "arn:aws:s3:::codebuild",
                          !Ref AWS::Region,
                          !Ref AWS::AccountId,
                          "report-group/aws-rosettafold*",
                        ],
                      ]
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "codebuild-role",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  CodeBuildEncryptionKey:
    Type: "AWS::KMS::Key"
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS:
                Fn::Join: [":", ["arn:aws:iam:", !Ref AWS::AccountId, "root"]]
            Action: "kms:*"
            Resource: "*"
          - Sid: Enable CodeBuild Encryption
            Effect: Allow
            Principal:
              AWS: !GetAtt CodeBuildRole.Arn
            Action:
              [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:DescribeKey",
              ]
            Resource: "*"
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "kms",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  RFCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: Build Docker container for RoseTTAFold execution on AWS Batch
      EncryptionKey: !Ref CodeBuildEncryptionKey
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        EnvironmentVariables:
          - Name: IMAGE_TAG
            Value: latest
          - Name: IMAGE_REPO_NAME
            Value: !Ref RFContainerRegistry
          - Name: ACCOUNT_ID
            Value: !Ref AWS::AccountId
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Name:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "codebuild-project",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      ResourceAccessRole: !GetAtt CodeBuildRole.Arn
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        BuildSpec: config/container_buildspec.yml
        GitCloneDepth: 1
        Location: !GetAtt RFCodeRepository.CloneUrlHttp
        Type: CODECOMMIT
      SourceVersion: refs/heads/main
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "codebuild-project",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "codepipeline-role",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      Description: "Required service policies to support running AWS-RoseTTAFold build pipeline"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: codePipelineDefault
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - iam:PassRole
                Resource: "*"
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - elasticbeanstalk.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetRepository
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: "*"
                Effect: Allow
              - Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplication
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: "*"
                Effect: Allow
              - Action:
                  - codestar-connections:UseConnection
                Resource: "*"
                Effect: Allow
              - Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource: "*"
                Effect: Allow
              - Action:
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack
                Resource: "*"
                Effect: Allow
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                Resource: "*"
                Effect: Allow
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuildBatches
                  - codebuild:StartBuildBatch
                Resource: "*"
                Effect: Allow
              - Effect: Allow
                Action:
                  - devicefarm:ListProjects
                  - devicefarm:ListDevicePools
                  - devicefarm:GetRun
                  - devicefarm:GetUpload
                  - devicefarm:CreateUpload
                  - devicefarm:ScheduleRun
                Resource: "*"
              - Effect: Allow
                Action:
                  - servicecatalog:ListProvisioningArtifacts
                  - servicecatalog:CreateProvisioningArtifact
                  - servicecatalog:DescribeProvisioningArtifact
                  - servicecatalog:DeleteProvisioningArtifact
                  - servicecatalog:UpdateProduct
                Resource: "*"
              - Effect: Allow
                Action:
                  - cloudformation:ValidateTemplate
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecr:DescribeImages
                Resource: "*"
              - Effect: Allow
                Action:
                  - states:DescribeExecution
                  - states:DescribeStateMachine
                  - states:StartExecution
                Resource: "*"
              - Effect: Allow
                Action:
                  - appconfig:StartDeployment
                  - appconfig:StopDeployment
                  - appconfig:GetDeployment
                Resource: "*"
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "codepipeline-role",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  RFCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ResultsS3
        Type: S3
      Name:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "codepipeline",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !GetAtt RFCodeRepository.Name
                BranchName: main
                PollForSourceChanges: "false"
              Namespace: SourceVariables
              OutputArtifacts:
                - Name: SourceArtifact
              Region: !Ref AWS::Region
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref RFCodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              Namespace: BuildVariables
              OutputArtifacts:
                - Name: BuildArtifact
              Region: !Ref AWS::Region
              RunOrder: 2
      Tags:
        - Key: Application
          Value: AWS-RoseTTAFold
        - Key: Name
          Value:
            !Join [
              "-",
              [
                "aws-rosettafold",
                "codepipeline",
                !Select [
                  4,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ],
              ],
            ]

  ##################################################
  # Batch Environment
  ##################################################

  CPUComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "ce-cpu",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      ComputeResources:
        AllocationStrategy: BEST_FIT_PROGRESSIVE
        InstanceRole: !Ref InstanceProfile
        InstanceTypes:
          - optimal
        LaunchTemplate:
          LaunchTemplateId: !Ref InstanceLaunchTemplate
          Version: $Latest
        MaxvCpus: 256
        MinvCpus: 0
        SecurityGroupIds:
          - !GetAtt VPC.DefaultSecurityGroup
        Subnets:
          - Ref: PrivateSubnet0
        Type: EC2
      State: ENABLED
      Type: MANAGED
      Tags:
        Application: AWS-RoseTTAFold
        Name:
          !Join [
            "-",
            [
              "aws-rosettafold",
              "ce-cpu",
              !Select [
                4,
                !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
              ],
            ],
          ]

  GPUComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "ce-gpu",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      ComputeResources:
        AllocationStrategy: BEST_FIT_PROGRESSIVE
        InstanceRole: !Ref InstanceProfile
        InstanceTypes:
          - g4dn
        LaunchTemplate:
          LaunchTemplateId: !Ref InstanceLaunchTemplate
          Version: $Latest
        MaxvCpus: 256
        MinvCpus: 0
        SecurityGroupIds:
          - !GetAtt VPC.DefaultSecurityGroup
        Subnets:
          - Ref: PrivateSubnet0
        Type: EC2
      State: ENABLED
      Type: MANAGED
      Tags:
        Application: AWS-RoseTTAFold
        Name:
          !Join [
            "-",
            [
              "aws-rosettafold",
              "ce-gpu",
              !Select [
                4,
                !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
              ],
            ],
          ]

  CPUJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref CPUComputeEnvironment
          Order: 1
      JobQueueName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "queue-cpu",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      Priority: 10
      State: ENABLED
      Tags:
        Application: AWS-RoseTTAFold
        Name:
          !Join [
            "-",
            [
              "aws-rosettafold",
              "queue-cpu",
              !Select [
                4,
                !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
              ],
            ],
          ]

  GPUJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref GPUComputeEnvironment
          Order: 1
      JobQueueName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "queue-gpu",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      Priority: 10
      State: ENABLED
      Tags:
        Application: AWS-RoseTTAFold
        Name:
          !Join [
            "-",
            [
              "aws-rosettafold",
              "queue-gpu",
              !Select [
                4,
                !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
              ],
            ],
          ]

  CPUJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      ContainerProperties:
        Command:
          - "/bin/bash"
          - "run_aws_data_prep_ver.sh"
          - "-i"
          - !Join ["", ["s3://", !Ref ResultsS3]]
          - "-o"
          - !Join ["", ["s3://", !Ref ResultsS3]]
          - "-n"
          - "input.fa"
          - "-w"
          - "/work"
          - "-d"
          - "/fsx/aws-rosettafold-ref-data"
          - "-c"
          - "16"
          - "-m"
          - "60"
        Image:
          !Join [":", [!GetAtt RFContainerRegistry.RepositoryUri, "latest"]]
        LogConfiguration:
          LogDriver: awslogs
        MountPoints:
          - ContainerPath: /fsx
            ReadOnly: False
            SourceVolume: fsx
        ResourceRequirements:
          - Type: VCPU
            Value: 16
          - Type: MEMORY
            Value: 60000
        Volumes:
          - Name: fsx
            Host:
              SourcePath: /fsx
      JobDefinitionName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "job-def-cpu",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      PlatformCapabilities:
        - EC2
      PropagateTags: true
      RetryStrategy:
        Attempts: 3
      Tags:
        Application: AWS-RoseTTAFold
        Name:
          !Join [
            "-",
            [
              "aws-rosettafold",
              "job-def-cpu",
              !Select [
                4,
                !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
              ],
            ],
          ]
      Type: container    

  GPUJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      ContainerProperties:
        Command:
          - "/bin/bash"
          - "run_aws_predict_ver.sh"
          - "-i"
          - !Join ["", ["s3://", !Ref ResultsS3]]
          - "-o"
          - !Join ["", ["s3://", !Ref ResultsS3]]
          - "-n"
          - "input.fa"
          - "-w"
          - "/work"
          - "-d"
          - "/fsx/aws-rosettafold-ref-data"
          - "-x"
          - "/fsx/aws-rosettafold-ref-data"
          - "-c"
          - "32"
          - "-m"
          - "90"
        Environment:
          - Name: CUDA_VISIBLE_DEVICES
            Value: 2
        Image:
          !Join [":", [!GetAtt RFContainerRegistry.RepositoryUri, "latest"]]
        LogConfiguration:
          LogDriver: awslogs
        MountPoints:
          - ContainerPath: /fsx
            ReadOnly: False
            SourceVolume: fsx
        ResourceRequirements:
          - Type: VCPU
            Value: 32
          - Type: MEMORY
            Value: 90000
          - Type: GPU
            Value: 3
        Volumes:
          - Name: fsx
            Host:
              SourcePath: /fsx
      JobDefinitionName:
        !Join [
          "-",
          [
            "aws-rosettafold",
            "job-def-gpu",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
            ],
          ],
        ]
      PlatformCapabilities:
        - EC2
      PropagateTags: true
      RetryStrategy:
        Attempts: 3
      Tags:
        Application: AWS-RoseTTAFold
        Name:
          !Join [
            "-",
            [
              "aws-rosettafold",
              "job-def-gpu",
              !Select [
                4,
                !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
              ],
            ],
          ]
      Type: container

Outputs:
  CodeRepoUri:
    Description: URI for cloning the CodeCommit repository over HTTPS
    Value: !GetAtt RFCodeRepository.CloneUrlHttp
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", CodeRepoUri]]
  CPUJobDefinition:
    Description: Name of the CPU job definition.
    Value: !Select [5, !Split [":", !Ref CPUJobDefinition]]
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", CPUJobDefinition]]
  CPUJobQueueName:
    Description: Name of the CPU job queue.
    Value: !Select [5, !Split [":", !Ref CPUJobQueue]]
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", CPUJobQueueName]]
  GPUJobDefinition:
    Description: Name of the GPU job definition.
    Value: !Select [5, !Split [":", !Ref GPUJobDefinition]]
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", GPUJobDefinition]]
  GPUJobQueueName:
    Description: Name of the GPU job queue.
    Value: !Select [5, !Split [":", !Ref GPUJobQueue]]
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", GPUJobQueueName]]
